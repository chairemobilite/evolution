// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Question with widget InputButton Render widget 1`] = `
<div
  className="apptr__form-container two-columns question-type-button question-filled question-valid"
  onClick={[Function]}
  style={
    Object {
      "position": "relative",
    }
  }
>
  <div
    className="apptr__form-label-container two-columns"
  >
    <label
      htmlFor="survey-question__home.region"
    >
      <div
        dangerouslySetInnerHTML={
          Object {
            "__html": "English text",
          }
        }
      />
    </label>
  </div>
  <div
    className="apptr__form-input-container two-columns"
  >
    <div
      className="survey-question__input-button-group-container"
    >
      <div
        className="survey-question__input-button-input-container"
      >
        <button
          className="survey-section__button button green large"
          id="survey-question__home.region__input-button__c1"
          onClick={[Function]}
          type="button"
        >
          choice 1
        </button>
      </div>
      <div
        className="survey-question__input-button-input-container"
      >
        <button
          className="survey-section__button button green large"
          id="survey-question__home.region__input-button__c2"
          onClick={[Function]}
          type="button"
        >
          choice 2
        </button>
      </div>
    </div>
  </div>
</div>
`;

exports[`Question with widget InputCheckbox Render widget 1`] = `
<div
  className="apptr__form-container two-columns question-type-checkbox question-filled question-valid"
  onClick={[Function]}
  style={
    Object {
      "position": "relative",
    }
  }
>
  <fieldset>
    <div
      className="apptr__form-label-container two-columns"
    >
      <legend>
        <div
          className="apptr__form__label-standalone"
        >
          <div
            dangerouslySetInnerHTML={
              Object {
                "__html": "English text",
              }
            }
          />
        </div>
      </legend>
    </div>
    <div
      className="apptr__form-input-container two-columns"
    >
      <div
        className="survey-question__input-checkbox-group-container"
      >
        <div
          className="survey-question__input-checkbox-input-container"
          onClick={[Function]}
        >
          <div
            className="label-input-container"
          >
            <input
              checked={false}
              className="input-checkbox"
              id="survey-question__home.region_c1__input-checkbox__c1"
              name="survey-question__home.region_c1"
              onChange={[Function]}
              onClick={[Function]}
              type="checkbox"
              value="c1"
            />
            <label
              htmlFor="survey-question__home.region_c1__input-checkbox__c1"
              onClick={[Function]}
            >
              <span
                dangerouslySetInnerHTML={
                  Object {
                    "__html": "choice 1",
                  }
                }
              />
            </label>
          </div>
        </div>
        <div
          className="survey-question__input-checkbox-input-container checked"
          onClick={[Function]}
        >
          <div
            className="label-input-container"
          >
            <input
              checked={true}
              className="input-checkbox"
              id="survey-question__home.region_c2__input-checkbox__c2"
              name="survey-question__home.region_c2"
              onChange={[Function]}
              onClick={[Function]}
              type="checkbox"
              value="c2"
            />
            <label
              htmlFor="survey-question__home.region_c2__input-checkbox__c2"
              onClick={[Function]}
            >
              <span
                dangerouslySetInnerHTML={
                  Object {
                    "__html": "choice 2",
                  }
                }
              />
            </label>
          </div>
        </div>
      </div>
    </div>
  </fieldset>
</div>
`;

exports[`Question with widget InputDatePicker Render widget 1`] = `
<div
  className="apptr__form-container two-columns question-type-datePicker question-filled question-valid"
  onClick={[Function]}
  style={
    Object {
      "position": "relative",
    }
  }
>
  <div
    className="apptr__form-label-container two-columns"
  >
    <label
      htmlFor="survey-question__home.region"
    >
      <div
        dangerouslySetInnerHTML={
          Object {
            "__html": "English text",
          }
        }
      />
    </label>
  </div>
  <div
    className="apptr__form-input-container two-columns"
  >
    <div
      className="survey-question__input-date-picker-container"
    >
      <div
        className="react-datepicker-wrapper"
      >
        <div
          className="react-datepicker__input-container"
        >
          <input
            autoComplete="none"
            className="apptr__form-input input-date-picker input-large"
            disabled={false}
            id="survey-question__home.region"
            name="survey-question__home.region"
            onBlur={[Function]}
            onChange={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            placeholder="ClickToSelectDate"
            readOnly={false}
            type="text"
            value="24/05/2023"
          />
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Question with widget InputMultiselect Render widget 1`] = `
<div
  className="apptr__form-container two-columns question-type-multiselect question-filled question-valid"
  onClick={[Function]}
  style={
    Object {
      "position": "relative",
    }
  }
>
  <div
    className="apptr__form-label-container two-columns"
  >
    <div
      className="apptr__form__label-standalone"
      id="survey-question__home.region_label"
    >
      <div
        dangerouslySetInnerHTML={
          Object {
            "__html": "English text",
          }
        }
      />
    </div>
  </div>
  <div
    className="apptr__form-input-container two-columns"
  >
    <div
      className="survey-question__input-multiselect-container"
    >
      <div
        className="react-select-container css-b62m3t-container"
        onKeyDown={[Function]}
      >
        <span
          className="css-1f43avz-a11yText-A11yText"
          id="react-select-2-live-region"
        />
        <span
          aria-atomic="false"
          aria-live="polite"
          aria-relevant="additions text"
          className="css-1f43avz-a11yText-A11yText"
        />
        <div
          className="react-select__control css-13cymwt-control"
          onMouseDown={[Function]}
          onTouchEnd={[Function]}
        >
          <div
            className="react-select__value-container react-select__value-container--is-multi react-select__value-container--has-value css-3w2yfm-ValueContainer"
          >
            <div
              className="react-select__multi-value css-1p3m7a8-multiValue"
            >
              <div
                className="react-select__multi-value__label css-wsp0cs-MultiValueGeneric"
              >
                <div
                  style={
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                    }
                  }
                >
                  <div
                    style={
                      Object {
                        "background": undefined,
                        "borderRadius": 6,
                        "height": 6,
                        "marginRight": 6,
                        "width": 6,
                      }
                    }
                  />
                  choice 2
                </div>
              </div>
              <div
                aria-label="Remove [object Object]"
                className="react-select__multi-value__remove css-12a83d4-MultiValueRemove"
                onClick={[Function]}
                onMouseDown={[Function]}
                onTouchEnd={[Function]}
                role="button"
              >
                <svg
                  aria-hidden="true"
                  className="css-tj5bde-Svg"
                  focusable="false"
                  height={14}
                  viewBox="0 0 20 20"
                  width={14}
                >
                  <path
                    d="M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z"
                  />
                </svg>
              </div>
            </div>
            <div
              className="react-select__input-container css-qbdosj-Input"
              data-value=""
            >
              <input
                aria-autocomplete="list"
                aria-expanded={false}
                aria-haspopup={true}
                aria-labelledby="survey-question__home.region_label"
                autoCapitalize="none"
                autoComplete="off"
                autoCorrect="off"
                className="react-select__input"
                disabled={false}
                id="react-select-2-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                role="combobox"
                spellCheck="false"
                style={
                  Object {
                    "background": 0,
                    "border": 0,
                    "color": "inherit",
                    "font": "inherit",
                    "gridArea": "1 / 2",
                    "label": "input",
                    "margin": 0,
                    "minWidth": "2px",
                    "opacity": 1,
                    "outline": 0,
                    "padding": 0,
                    "width": "100%",
                  }
                }
                tabIndex={0}
                type="text"
                value=""
              />
            </div>
          </div>
          <div
            className="react-select__indicators css-1hb7zxy-IndicatorsContainer"
          >
            <span
              className="react-select__indicator-separator css-1u9des2-indicatorSeparator"
            />
            <div
              aria-hidden="true"
              className="react-select__indicator react-select__dropdown-indicator css-1xc3v61-indicatorContainer"
              onMouseDown={[Function]}
              onTouchEnd={[Function]}
            >
              <svg
                aria-hidden="true"
                className="css-tj5bde-Svg"
                focusable="false"
                height={20}
                viewBox="0 0 20 20"
                width={20}
              >
                <path
                  d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                />
              </svg>
            </div>
          </div>
        </div>
        <div>
          <input
            name="survey-question__input-multiselect-home.region"
            type="hidden"
            value="c2"
          />
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Question with widget InputRadio Render widget 1`] = `
<div
  className="apptr__form-container two-columns question-type-radio question-filled question-valid"
  onClick={[Function]}
  style={
    Object {
      "position": "relative",
    }
  }
>
  <fieldset>
    <div
      className="apptr__form-label-container two-columns"
    >
      <legend>
        <div
          className="apptr__form__label-standalone"
        >
          <div
            dangerouslySetInnerHTML={
              Object {
                "__html": "English text",
              }
            }
          />
        </div>
      </legend>
    </div>
    <div
      className="apptr__form-input-container two-columns"
    >
      <div
        className="survey-question__input-radio-group-container"
      >
        <div
          className="survey-question__input-radio-input-container"
          onClick={[Function]}
        >
          <div
            className="label-input-container"
          >
            <input
              checked={false}
              className="input-radio"
              id="survey-question__home.region_c1__input-radio__c1"
              name="survey-question__home.region_c1"
              onChange={[Function]}
              onClick={[Function]}
              type="radio"
              value="c1"
            />
            <label
              htmlFor="survey-question__home.region_c1__input-radio__c1"
              onClick={[Function]}
            >
              <span
                dangerouslySetInnerHTML={
                  Object {
                    "__html": "choice 1",
                  }
                }
              />
            </label>
          </div>
        </div>
        <div
          className="survey-question__input-radio-input-container checked"
          onClick={[Function]}
        >
          <div
            className="label-input-container"
          >
            <input
              checked={true}
              className="input-radio"
              id="survey-question__home.region_c2__input-radio__c2"
              name="survey-question__home.region_c2"
              onChange={[Function]}
              onClick={[Function]}
              type="radio"
              value="c2"
            />
            <label
              htmlFor="survey-question__home.region_c2__input-radio__c2"
              onClick={[Function]}
            >
              <span
                dangerouslySetInnerHTML={
                  Object {
                    "__html": "choice 2",
                  }
                }
              />
            </label>
          </div>
        </div>
      </div>
    </div>
  </fieldset>
</div>
`;

exports[`Question with widget InputRadioNumber Render widget 1`] = `
<div
  className="apptr__form-container two-columns question-type-radioNumber question-filled question-valid"
  onClick={[Function]}
  style={
    Object {
      "position": "relative",
    }
  }
>
  <fieldset>
    <div
      className="apptr__form-label-container two-columns"
    >
      <legend>
        <div
          className="apptr__form__label-standalone"
        >
          <div
            dangerouslySetInnerHTML={
              Object {
                "__html": "English text",
              }
            }
          />
        </div>
      </legend>
    </div>
    <div
      className="apptr__form-input-container two-columns"
    >
      <div
        className="survey-question__input-radio-group-container"
      >
        <div
          className="survey-question__input-radio-input-container"
          onClick={[Function]}
        >
          <div
            className="label-input-container"
          >
            <input
              checked={false}
              className="input-radio"
              id="survey-question__home.region_1__input-radio__1"
              name="survey-question__home.region_1"
              onChange={[Function]}
              onClick={[Function]}
              type="radio"
              value="1"
            />
            <label
              htmlFor="survey-question__home.region_1__input-radio__1"
              onClick={[Function]}
            >
              <span
                dangerouslySetInnerHTML={
                  Object {
                    "__html": "1",
                  }
                }
              />
            </label>
          </div>
        </div>
        <div
          className="survey-question__input-radio-input-container"
          onClick={[Function]}
        >
          <div
            className="label-input-container"
          >
            <input
              checked={false}
              className="input-radio"
              id="survey-question__home.region_2__input-radio__2"
              name="survey-question__home.region_2"
              onChange={[Function]}
              onClick={[Function]}
              type="radio"
              value="2"
            />
            <label
              htmlFor="survey-question__home.region_2__input-radio__2"
              onClick={[Function]}
            >
              <span
                dangerouslySetInnerHTML={
                  Object {
                    "__html": "2",
                  }
                }
              />
            </label>
          </div>
        </div>
        <div
          className="survey-question__input-radio-input-container"
          onClick={[Function]}
        >
          <div
            className="label-input-container"
          >
            <input
              checked={false}
              className="input-radio"
              id="survey-question__home.region_3__input-radio__3"
              name="survey-question__home.region_3"
              onChange={[Function]}
              onClick={[Function]}
              type="radio"
              value="3"
            />
            <label
              htmlFor="survey-question__home.region_3__input-radio__3"
              onClick={[Function]}
            >
              <span
                dangerouslySetInnerHTML={
                  Object {
                    "__html": "3",
                  }
                }
              />
            </label>
          </div>
        </div>
        <div
          className="survey-question__input-radio-input-container checked"
          onClick={[Function]}
        >
          <div
            className="label-input-container"
          >
            <input
              checked={true}
              className="input-radio"
              id="survey-question__home.region_4__input-radio__4"
              name="survey-question__home.region_4"
              onChange={[Function]}
              onClick={[Function]}
              type="radio"
              value="4"
            />
            <label
              htmlFor="survey-question__home.region_4__input-radio__4"
              onClick={[Function]}
            >
              <span
                dangerouslySetInnerHTML={
                  Object {
                    "__html": "4+",
                  }
                }
              />
            </label>
          </div>
        </div>
        <div
          style={
            Object {
              "alignItems": "center",
              "display": "flex",
              "gap": "1rem",
            }
          }
        >
          <label
            htmlFor="survey-question__home.regionover-max"
          >
            <span>
              SpecifyAboveLimit:
            </span>
          </label>
          <input
            className="apptr__form-input apptr__input-string input-large"
            defaultValue={4}
            id="survey-question__home.regionover-max"
            min={4}
            name="survey-question__home.regionover-max"
            onBlur={[Function]}
            onMouseUp={[Function]}
            pattern="[0-9]*"
            style={
              Object {
                "width": "6rem",
              }
            }
            type="number"
          />
        </div>
      </div>
    </div>
  </fieldset>
</div>
`;

exports[`Question with widget InputRange Render widget 1`] = `
<div
  className="apptr__form-container two-columns question-type-slider question-filled question-valid"
  onClick={[Function]}
  style={
    Object {
      "position": "relative",
    }
  }
>
  <div
    className="apptr__form-label-container two-columns"
  >
    <div
      className="apptr__form__label-standalone"
      id="survey-question__home.region_label"
    >
      <div
        dangerouslySetInnerHTML={
          Object {
            "__html": "English text",
          }
        }
      />
    </div>
  </div>
  <div
    className="apptr__form-input-container two-columns"
  >
    <div
      className="survey-question__input-range_input_container_with_labels input-blank"
    >
      <div
        aria-disabled={false}
        className="input-range"
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onTouchStart={[Function]}
      >
        <span
          className="input-range__label input-range__label--min"
        >
          <span
            className="input-range__label-container"
          >
            3
          </span>
        </span>
        <div
          className="input-range__track input-range__track--background"
          onMouseDown={[Function]}
          onTouchStart={[Function]}
        >
          <div
            className="input-range__track input-range__track--active"
            style={
              Object {
                "left": "0%",
                "width": "0%",
              }
            }
          />
          <span
            className="input-range__slider-container"
            style={
              Object {
                "left": "0%",
                "position": "absolute",
              }
            }
          >
            <span
              className="input-range__label input-range__label--value"
            >
              <span
                className="input-range__label-container"
              >
                3
              </span>
            </span>
            <div
              aria-labelledby="survey-question__home.region_label"
              aria-valuemax={10}
              aria-valuemin={3}
              aria-valuenow={3}
              className="input-range__slider"
              draggable="false"
              onKeyDown={[Function]}
              onMouseDown={[Function]}
              onTouchStart={[Function]}
              role="slider"
              tabIndex="0"
            />
          </span>
        </div>
        <span
          className="input-range__label input-range__label--max"
        >
          <span
            className="input-range__label-container"
          >
            10
          </span>
        </span>
        <input
          name="survey-question__home.region"
          type="hidden"
          value={3}
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Question with widget InputSelect Render widget 1`] = `
<div
  className="apptr__form-container two-columns question-type-select question-filled question-valid"
  onClick={[Function]}
  style={
    Object {
      "position": "relative",
    }
  }
>
  <div
    className="apptr__form-label-container two-columns"
  >
    <label
      htmlFor="survey-question__home.region"
    >
      <div
        dangerouslySetInnerHTML={
          Object {
            "__html": "English text",
          }
        }
      />
    </label>
  </div>
  <div
    className="apptr__form-input-container two-columns"
  >
    <div
      className="survey-question__input-select-container"
    >
      <select
        id="survey-question__home.region"
        onChange={[Function]}
        style={
          Object {
            "maxWidth": "100%",
            "overflow": "hidden",
            "textOverflow": "ellipsis",
            "whiteSpace": "nowrap",
          }
        }
        value="c2"
      >
        <option
          className="input-select-option"
          value=""
        />
        <option
          className="input-select-option"
          value="c1"
        >
          choice 1
        </option>
        <option
          className="input-select-option"
          value="c2"
        >
          choice 2
        </option>
        <optgroup
          label=""
        />
      </select>
    </div>
  </div>
</div>
`;

exports[`Question with widget InputString Render widget 1`] = `
<div
  className="apptr__form-container two-columns question-type-string question-filled question-valid"
  onClick={[Function]}
  style={
    Object {
      "position": "relative",
    }
  }
>
  <div
    className="apptr__form-label-container two-columns"
  >
    <label
      htmlFor="survey-question__home.region"
    >
      <div
        dangerouslySetInnerHTML={
          Object {
            "__html": "English text",
          }
        }
      />
    </label>
  </div>
  <div
    className="apptr__form-input-container two-columns"
  >
    <input
      autoComplete="none"
      className="apptr__form-input apptr__input-string input-large"
      id="survey-question__home.region"
      maxLength={255}
      name="survey-question__home.region"
      onBlur={[Function]}
      onChange={[Function]}
      style={
        Object {
          "textTransform": "none",
        }
      }
      type="text"
      value=""
    />
  </div>
</div>
`;

exports[`Question with widget InputText Render widget 1`] = `
<div
  className="apptr__form-container two-columns question-type-text question-filled question-valid"
  onClick={[Function]}
  style={
    Object {
      "position": "relative",
    }
  }
>
  <div
    className="apptr__form-label-container two-columns"
  >
    <label
      htmlFor="survey-question__home.region"
    >
      <div
        dangerouslySetInnerHTML={
          Object {
            "__html": "English text",
          }
        }
      />
    </label>
  </div>
  <div
    className="apptr__form-input-container two-columns"
  >
    <textarea
      autoComplete="off"
      className="apptr__form-input input-text"
      defaultValue="foo"
      id="survey-question__home.region"
      maxLength={2000}
      onBlur={[Function]}
      rows={5}
    />
  </div>
</div>
`;

exports[`Question with widget InputTime Render widget 1`] = `
<div
  className="apptr__form-container two-columns question-type-time question-filled question-valid"
  onClick={[Function]}
  style={
    Object {
      "position": "relative",
    }
  }
>
  <div
    className="apptr__form-label-container two-columns"
  >
    <label
      htmlFor="survey-question__home.region"
    >
      <div
        dangerouslySetInnerHTML={
          Object {
            "__html": "English text",
          }
        }
      />
    </label>
  </div>
  <div
    className="apptr__form-input-container two-columns"
  >
    <div
      className="survey-question__input-select-container survey-question__input-time-container"
    >
      <select
        id="survey-question__home.region"
        onChange={[Function]}
        value={3660}
      >
        <option
          className="input-select-option"
          value=""
        />
        <option
          value={3600}
        >
          1:00 am
          
        </option>
        <option
          value={4200}
        >
          1:10 am
          
        </option>
        <option
          value={4800}
        >
          1:20 am
          
        </option>
        <option
          value={5400}
        >
          1:30 am
          
        </option>
        <option
          value={6000}
        >
          1:40 am
          
        </option>
        <option
          value={6600}
        >
          1:50 am
          
        </option>
        <option
          value={7200}
        >
          2:00 am
          
        </option>
      </select>
    </div>
  </div>
</div>
`;

exports[`With error message Error message on visible widget 1`] = `
<div
  className="apptr__form-container two-columns question-type-string question-filled question-invalid"
  onClick={[Function]}
  style={
    Object {
      "position": "relative",
    }
  }
>
  <div
    className="apptr__form-label-container two-columns"
  >
    <label
      htmlFor="survey-question__home.region"
    >
      <div
        dangerouslySetInnerHTML={
          Object {
            "__html": "English text",
          }
        }
      />
    </label>
    <p
      className="apptr__form-error-message"
    >
      <span
        dangerouslySetInnerHTML={
          Object {
            "__html": "error test",
          }
        }
      />
    </p>
  </div>
  <div
    className="apptr__form-input-container two-columns"
  >
    <input
      autoComplete="none"
      className="apptr__form-input apptr__input-string input-large"
      id="survey-question__home.region"
      maxLength={255}
      name="survey-question__home.region"
      onBlur={[Function]}
      onChange={[Function]}
      style={
        Object {
          "textTransform": "none",
        }
      }
      type="text"
      value=""
    />
  </div>
</div>
`;

exports[`With help popup and link Open modal 1`] = `
Array [
  <Modal
    ariaHideApp={true}
    bodyOpenClassName="ReactModal__Body--open"
    className="react-modal"
    closeTimeoutMS={0}
    contentElement={[Function]}
    contentLabel="Help title"
    isOpen={true}
    onRequestClose={[Function]}
    overlayClassName="react-modal-overlay"
    overlayElement={[Function]}
    parentSelector={[Function]}
    portalClassName="ReactModalPortal"
    preventScroll={false}
    role="dialog"
    shouldCloseOnEsc={true}
    shouldCloseOnOverlayClick={true}
    shouldFocusAfterRender={true}
    shouldReturnFocusAfterClose={true}
  >
    <Portal
      containerInfo={
        <div
          class="ReactModalPortal"
        >
          <div
            class="ReactModal__Overlay ReactModal__Overlay--after-open react-modal-overlay"
          >
            <div
              aria-label="Help title"
              aria-modal="true"
              class="ReactModal__Content ReactModal__Content--after-open react-modal"
              role="dialog"
              tabindex="-1"
            >
              <div>
                <h3
                  class="center"
                >
                  <p>
                    Help title
                  </p>
                </h3>
                <div
                  class="help-popup"
                >
                  <p>
                    Help content
                  </p>
                </div>
                <div
                  class="center"
                >
                  <button
                    class="button blue"
                  >
                    OK
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      }
    >
      <ModalPortal
        ariaHideApp={true}
        bodyOpenClassName="ReactModal__Body--open"
        className="react-modal"
        closeTimeoutMS={0}
        contentElement={[Function]}
        contentLabel="Help title"
        defaultStyles={
          Object {
            "content": Object {
              "WebkitOverflowScrolling": "touch",
              "background": "#fff",
              "border": "1px solid #ccc",
              "borderRadius": "4px",
              "bottom": "40px",
              "left": "40px",
              "outline": "none",
              "overflow": "auto",
              "padding": "20px",
              "position": "absolute",
              "right": "40px",
              "top": "40px",
            },
            "overlay": Object {
              "backgroundColor": "rgba(255, 255, 255, 0.75)",
              "bottom": 0,
              "left": 0,
              "position": "fixed",
              "right": 0,
              "top": 0,
            },
          }
        }
        isOpen={true}
        onRequestClose={[Function]}
        overlayClassName="react-modal-overlay"
        overlayElement={[Function]}
        parentSelector={[Function]}
        portalClassName="ReactModalPortal"
        preventScroll={false}
        role="dialog"
        shouldCloseOnEsc={true}
        shouldCloseOnOverlayClick={true}
        shouldFocusAfterRender={true}
        shouldReturnFocusAfterClose={true}
        style={
          Object {
            "content": Object {},
            "overlay": Object {},
          }
        }
      >
        <div
          className="ReactModal__Overlay ReactModal__Overlay--after-open react-modal-overlay"
          onClick={[Function]}
          onMouseDown={[Function]}
          style={Object {}}
        >
          <div
            aria-label="Help title"
            aria-modal={true}
            className="ReactModal__Content ReactModal__Content--after-open react-modal"
            onClick={[Function]}
            onKeyDown={[Function]}
            onMouseDown={[Function]}
            onMouseUp={[Function]}
            role="dialog"
            style={Object {}}
            tabIndex="-1"
          >
            <div>
              <h3
                className="center"
              >
                <ReactMarkdown
                  remarkPlugins={
                    Array [
                      Array [
                        [Function],
                        Object {
                          "singleTilde": false,
                        },
                      ],
                    ]
                  }
                  transformLinkUri={[Function]}
                >
                  <p
                    key="p-1-1-0"
                  >
                    Help title
                  </p>
                </ReactMarkdown>
              </h3>
              <ReactMarkdown
                className="help-popup"
                remarkPlugins={
                  Array [
                    Array [
                      [Function],
                      Object {
                        "singleTilde": false,
                      },
                    ],
                  ]
                }
                transformLinkUri={[Function]}
              >
                <div
                  className="help-popup"
                >
                  <p
                    key="p-1-1-0"
                  >
                    Help content
                  </p>
                </div>
              </ReactMarkdown>
              <div
                className="center"
              >
                <button
                  className="button blue"
                  onClick={[Function]}
                >
                  OK
                </button>
              </div>
            </div>
          </div>
        </div>
      </ModalPortal>
    </Portal>
  </Modal>,
  <ModalPortal
    ariaHideApp={true}
    bodyOpenClassName="ReactModal__Body--open"
    className="react-modal"
    closeTimeoutMS={0}
    contentElement={[Function]}
    contentLabel="Help title"
    defaultStyles={
      Object {
        "content": Object {
          "WebkitOverflowScrolling": "touch",
          "background": "#fff",
          "border": "1px solid #ccc",
          "borderRadius": "4px",
          "bottom": "40px",
          "left": "40px",
          "outline": "none",
          "overflow": "auto",
          "padding": "20px",
          "position": "absolute",
          "right": "40px",
          "top": "40px",
        },
        "overlay": Object {
          "backgroundColor": "rgba(255, 255, 255, 0.75)",
          "bottom": 0,
          "left": 0,
          "position": "fixed",
          "right": 0,
          "top": 0,
        },
      }
    }
    isOpen={true}
    onRequestClose={[Function]}
    overlayClassName="react-modal-overlay"
    overlayElement={[Function]}
    parentSelector={[Function]}
    portalClassName="ReactModalPortal"
    preventScroll={false}
    role="dialog"
    shouldCloseOnEsc={true}
    shouldCloseOnOverlayClick={true}
    shouldFocusAfterRender={true}
    shouldReturnFocusAfterClose={true}
    style={
      Object {
        "content": Object {},
        "overlay": Object {},
      }
    }
  >
    <div
      className="ReactModal__Overlay ReactModal__Overlay--after-open react-modal-overlay"
      onClick={[Function]}
      onMouseDown={[Function]}
      style={Object {}}
    >
      <div
        aria-label="Help title"
        aria-modal={true}
        className="ReactModal__Content ReactModal__Content--after-open react-modal"
        onClick={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onMouseUp={[Function]}
        role="dialog"
        style={Object {}}
        tabIndex="-1"
      >
        <div>
          <h3
            className="center"
          >
            <ReactMarkdown
              remarkPlugins={
                Array [
                  Array [
                    [Function],
                    Object {
                      "singleTilde": false,
                    },
                  ],
                ]
              }
              transformLinkUri={[Function]}
            >
              <p
                key="p-1-1-0"
              >
                Help title
              </p>
            </ReactMarkdown>
          </h3>
          <ReactMarkdown
            className="help-popup"
            remarkPlugins={
              Array [
                Array [
                  [Function],
                  Object {
                    "singleTilde": false,
                  },
                ],
              ]
            }
            transformLinkUri={[Function]}
          >
            <div
              className="help-popup"
            >
              <p
                key="p-1-1-0"
              >
                Help content
              </p>
            </div>
          </ReactMarkdown>
          <div
            className="center"
          >
            <button
              className="button blue"
              onClick={[Function]}
            >
              OK
            </button>
          </div>
        </div>
      </div>
    </div>
  </ModalPortal>,
  <div
    aria-label="Help title"
    aria-modal={true}
    className="ReactModal__Content ReactModal__Content--after-open react-modal"
    onClick={[Function]}
    onKeyDown={[Function]}
    onMouseDown={[Function]}
    onMouseUp={[Function]}
    role="dialog"
    style={Object {}}
    tabIndex="-1"
  >
    <div>
      <h3
        className="center"
      >
        <ReactMarkdown
          remarkPlugins={
            Array [
              Array [
                [Function],
                Object {
                  "singleTilde": false,
                },
              ],
            ]
          }
          transformLinkUri={[Function]}
        >
          <p
            key="p-1-1-0"
          >
            Help title
          </p>
        </ReactMarkdown>
      </h3>
      <ReactMarkdown
        className="help-popup"
        remarkPlugins={
          Array [
            Array [
              [Function],
              Object {
                "singleTilde": false,
              },
            ],
          ]
        }
        transformLinkUri={[Function]}
      >
        <div
          className="help-popup"
        >
          <p
            key="p-1-1-0"
          >
            Help content
          </p>
        </div>
      </ReactMarkdown>
      <div
        className="center"
      >
        <button
          className="button blue"
          onClick={[Function]}
        >
          OK
        </button>
      </div>
    </div>
  </div>,
]
`;

exports[`With help popup and link Test widget with help 1`] = `
<div
  className="apptr__form-container two-columns question-type-string question-filled question-valid"
  onClick={[Function]}
  style={
    Object {
      "position": "relative",
    }
  }
>
  <div
    className="apptr__form-label-container two-columns"
  >
    <label
      htmlFor="survey-question__home.region"
    >
      <div
        dangerouslySetInnerHTML={
          Object {
            "__html": "English text",
          }
        }
      />
    </label>
    <div>
      <button
        className="button helper-popup blue small"
        onClick={[Function]}
        tabIndex={-1}
        type="button"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-question-circle fa-w-16 faIconLeft"
          data-icon="question-circle"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 512 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
        Help title
      </button>
    </div>
  </div>
  <div
    className="apptr__form-input-container two-columns"
  >
    <input
      autoComplete="none"
      className="apptr__form-input apptr__input-string input-large"
      id="survey-question__home.region"
      maxLength={255}
      name="survey-question__home.region"
      onBlur={[Function]}
      onChange={[Function]}
      style={
        Object {
          "textTransform": "none",
        }
      }
      type="text"
      value="test"
    />
  </div>
</div>
`;

exports[`With joining questions Joining next 1`] = `
<div
  className="apptr__form-container apptr__form-join-next two-columns question-type-string question-filled question-valid"
  onClick={[Function]}
  style={
    Object {
      "position": "relative",
    }
  }
>
  <div
    className="apptr__form-label-container two-columns"
  >
    <label
      htmlFor="survey-question__home.region"
    >
      <div
        dangerouslySetInnerHTML={
          Object {
            "__html": "English text",
          }
        }
      />
    </label>
  </div>
  <div
    className="apptr__form-input-container two-columns"
  >
    <input
      autoComplete="none"
      className="apptr__form-input apptr__input-string input-large"
      id="survey-question__home.region"
      maxLength={255}
      name="survey-question__home.region"
      onBlur={[Function]}
      onChange={[Function]}
      style={
        Object {
          "textTransform": "none",
        }
      }
      type="text"
      value=""
    />
  </div>
</div>
`;
