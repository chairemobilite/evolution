/*
 * Copyright 2024, Polytechnique Montreal and contributors
 *
 * This file is licensed under the MIT License.
 * License text available at https://opensource.org/licenses/MIT
 */

import { Optional } from '../../../types/Optional.type';
import { IAudited } from '../../audits/IAudited';
import { Audit } from '../../audits/types';
import { Interview } from './Interview';
export type InterviewAuditedAttributes = {
    _isValid?: boolean; // whether the interview is valid (legit) and must be kept for export (true by default, must be set to false by a validator)
    _isCompleted?: boolean; // whether the interview is completed (false by default, changed by validators)
    _isQuestionable?: boolean; // whether the interview is doubtful or could be non genuine, changed by validator
    _originalInterviewId: number; // foreign key to Interview _id
    _audits?: Audit[]; // the audits associated with the Interview object, does not include nested audits (for Household, Person, etc.)
    /*
    The interview object being audited, must not be an original interview object. Original interview can be fetched using _originalInterviewId.
    TODO: Discuss if the uuid should match both the original and the audited interview versions.
    */
    _interview: Interview;
};

/**
 * Represents an audited interview in the survey system.
 *
 * @class
 * @description
 * The InterviewAudited class includes the interview data after it has been audited and/or enhance.
 *
 * The auditing process works as follows:
 * 1. The backend audit and enhance the Interview object.
 * 2. The InterviewAudited object is created from the results of the audit/enhancement.
 * 3. The audit results are stored in the _audits attribute of the InterviewAudited instance.
 * 6. Additional flags like _isValid, _isCompleted, and _isQuestionable are updated
 *    based on the auditor/admin person decisions.
 *
 * This class provides methods to access the audit results and the overall status of the interview,
 * which can be used by auditor and admin persons to ensure data quality.
 */
export class InterviewAudited implements IAudited<Interview> {
    private _isValid: Optional<boolean>; // set by the auditor/admin person
    private _isCompleted: Optional<boolean>; // set by the auditor/admin person
    private _isQuestionable: Optional<boolean>; // set by the auditor/admin person
    private _audits: Audit[]; // generated by the Auditor class
    private _originalInterviewId: number; // foreign key to Interview _id
    private _interview: Interview; // the interview object having been audited/enhanced, must not be an original interview object

    constructor(params: InterviewAuditedAttributes) {
        this._isValid = params._isValid;
        this._isCompleted = params._isCompleted;
        this._isQuestionable = params._isQuestionable;
        this._audits = params._audits || [];
        this._originalInterviewId = params._originalInterviewId;
        this._interview = params._interview;
    }

    isValid(): Optional<boolean> {
        return this._isValid;
    }

    isCompleted(): Optional<boolean> {
        return this._isCompleted;
    }

    isQuestionable(): Optional<boolean> {
        return this._isQuestionable;
    }

    setIsValid(isValid: boolean): void {
        this._isValid = isValid;
    }

    setIsCompleted(isCompleted: boolean): void {
        this._isCompleted = isCompleted;
    }

    setIsQuestionable(isQuestionable: boolean): void {
        this._isQuestionable = isQuestionable;
    }

    getAudits(): Audit[] {
        return this._audits;
    }

    getAuditedObject(): Interview {
        return this._interview;
    }

    getOriginalInterviewId(): number {
        return this._originalInterviewId;
    }

}
